/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
        vector<vector<int>> answer;
        vector<int> path;
        void search(TreeNode *root , int targetSum , int &sum)
        {
            if(!root)return;
            path.push_back(root->val);
            sum+=root->val;

            if(sum==targetSum && !root->left && !root->right)
            {
                answer.push_back(path);
            }
            search(root->left , targetSum  , sum);
            search(root->right , targetSum  , sum);
            path.pop_back();
            sum-=root->val;
        }
        
       
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        int sum=0;
        search(root , targetSum , sum);
        return answer;
    }
};
